<?php

return [
    /*
    |--------------------------------------------------------------------------
    | 插件系统配置
    |--------------------------------------------------------------------------
    |
    | 这里定义了插件系统的各种配置选项
    |
    */

    /*
    |--------------------------------------------------------------------------
    | 插件目录
    |--------------------------------------------------------------------------
    |
    | 定义插件存放的目录路径
    |
    */
    'plugin_path' => app_path('Addons'),

    /*
    |--------------------------------------------------------------------------
    | 自动加载插件
    |--------------------------------------------------------------------------
    |
    | 是否在应用启动时自动加载插件
    |
    */
    'auto_load' => env('PLUGINS_AUTO_LOAD', true),

    /*
    |--------------------------------------------------------------------------
    | 控制台命令
    |--------------------------------------------------------------------------
    |
    | 在控制台模式下允许加载插件的命令列表
    |
    */
    'console_commands' => [
        'serve',
        'queue:work',
        'queue:listen',
        'schedule:run',
        'plugin:list',
        'plugin:activate',
        'plugin:deactivate',
        'plugin:install',
        'plugin:uninstall',
    ],

    /*
    |--------------------------------------------------------------------------
    | 插件缓存
    |--------------------------------------------------------------------------
    |
    | 插件信息缓存配置
    |
    */
    'cache' => [
        'enabled' => env('PLUGINS_CACHE_ENABLED', true),
        'ttl' => env('PLUGINS_CACHE_TTL', 3600), // 缓存时间（秒）
        'key' => 'plugins_info',
    ],

    /*
    |--------------------------------------------------------------------------
    | 核心钩子
    |--------------------------------------------------------------------------
    |
    | 系统预定义的核心钩子列表
    |
    */
    'core_hooks' => [
        // 应用生命周期钩子
        'app.booted' => '应用启动完成',
        'app.terminating' => '应用终止',
        
        // 请求生命周期钩子
        'request.starting' => '请求开始',
        'request.terminating' => '请求结束',
        
        // 用户相关钩子
        'user.created' => '用户创建',
        'user.updated' => '用户更新',
        'user.deleted' => '用户删除',
        'user.login' => '用户登录',
        'user.logout' => '用户登出',
        
        // API相关钩子
        'api.before_response' => 'API响应前',
        'api.after_response' => 'API响应后',
        'api.error' => 'API错误',
        
        // 数据库相关钩子
        'model.creating' => '模型创建前',
        'model.created' => '模型创建后',
        'model.updating' => '模型更新前',
        'model.updated' => '模型更新后',
        'model.deleting' => '模型删除前',
        'model.deleted' => '模型删除后',
        
        // 缓存相关钩子
        'cache.hit' => '缓存命中',
        'cache.miss' => '缓存未命中',
        'cache.write' => '缓存写入',
        'cache.delete' => '缓存删除',
        
        // 日志相关钩子
        'log.writing' => '日志写入前',
        'log.written' => '日志写入后',
    ],

    /*
    |--------------------------------------------------------------------------
    | 核心过滤器
    |--------------------------------------------------------------------------
    |
    | 系统预定义的核心过滤器列表
    |
    */
    'core_filters' => [
        // API响应过滤器
        'api.response.data' => 'API响应数据过滤',
        'api.response.message' => 'API响应消息过滤',
        'api.response.code' => 'API响应状态码过滤',
        
        // 用户数据过滤器
        'user.data' => '用户数据过滤',
        'user.permissions' => '用户权限过滤',
        
        // 配置过滤器
        'config.value' => '配置值过滤',
        
        // 内容过滤器
        'content.title' => '内容标题过滤',
        'content.body' => '内容正文过滤',
        
        // 查询过滤器
        'query.where' => '查询条件过滤',
        'query.order' => '查询排序过滤',
        'query.limit' => '查询限制过滤',
    ],

    /*
    |--------------------------------------------------------------------------
    | 插件安全设置
    |--------------------------------------------------------------------------
    |
    | 插件安全相关配置
    |
    */
    'security' => [
        // 是否启用插件签名验证
        'verify_signature' => env('PLUGINS_VERIFY_SIGNATURE', false),
        
        // 允许的插件文件扩展名
        'allowed_extensions' => ['.php'],
        
        // 禁止的函数列表
        'forbidden_functions' => [
            'exec',
            'shell_exec',
            'system',
            'passthru',
            'eval',
            'file_get_contents',
            'file_put_contents',
            'fopen',
            'fwrite',
        ],
        
        // 最大插件大小（字节）
        'max_plugin_size' => 1024 * 1024 * 10, // 10MB
    ],

    /*
    |--------------------------------------------------------------------------
    | 插件开发模式
    |--------------------------------------------------------------------------
    |
    | 开发模式相关配置
    |
    */
    'development' => [
        // 是否启用开发模式
        'enabled' => env('PLUGINS_DEV_MODE', false),
        
        // 开发模式下是否自动重载插件
        'auto_reload' => env('PLUGINS_AUTO_RELOAD', false),
        
        // 开发模式下的调试级别
        'debug_level' => env('PLUGINS_DEBUG_LEVEL', 'info'),
    ],
];